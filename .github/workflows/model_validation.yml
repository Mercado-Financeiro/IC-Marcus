name: Model Validation and Performance Gates

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]

jobs:
  determinism-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        model: [xgboost]
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/torch
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
          
      - name: Test model determinism
        run: |
          python -m pytest tests/test_determinism.py::test_${{ matrix.model }}_determinism -v
          
      - name: Test data schema validation
        run: |
          python -m pytest tests/test_data_schema.py -v
          
      - name: Test feature consistency
        run: |
          python -m pytest tests/test_features.py -v

  performance-regression:
    runs-on: ubuntu-latest
    needs: determinism-tests
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Download baseline metrics
        run: |
          # Download baseline metrics from previous successful runs
          mkdir -p artifacts/baselines
          # In a real setup, this would download from artifact storage
          echo '{"xgboost_ev": 0.002, "xgboost_mcc": 0.15, "xgboost_auc_pr": 0.6}' > artifacts/baselines/baseline_metrics.json
          
      - name: Run performance validation
        run: |
          python scripts/validate_performance.py --model xgboost --baseline artifacts/baselines/baseline_metrics.json
          
      - name: Check performance gates
        run: |
          python scripts/check_performance_gates.py --results artifacts/validation_results.json
          
  memory-efficiency:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install memory-profiler
          
      - name: Test memory usage
        run: |
          python -m pytest tests/test_memory.py -v
          
      - name: Memory profiling
        run: |
          python scripts/memory_profiler.py --model xgboost --max-memory-mb 500