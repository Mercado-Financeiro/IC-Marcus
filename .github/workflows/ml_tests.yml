name: ML Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run model validation tests
      run: |
        pytest tests/validation/ -v --cov=src/models --cov-report=term-missing
    
    - name: Run regression tests
      run: |
        pytest tests/regression/ -v --cov=src/models --cov-report=term-missing
    
    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --cov=src --cov-report=term-missing
    
    - name: Test model determinism
      run: |
        python -c "
        import numpy as np
        import random
        import os
        
        # Set seeds
        os.environ['PYTHONHASHSEED'] = '42'
        np.random.seed(42)
        random.seed(42)
        
        # Test XGBoost determinism
        from src.models.xgb_optuna import XGBoostOptuna
        opt1 = XGBoostOptuna(seed=42)
        opt2 = XGBoostOptuna(seed=42)
        
        # Should have same configuration
        assert opt1.seed == opt2.seed
        print('✅ Determinism check passed')
        "
    
    - name: Validate model metrics thresholds
      run: |
        python -c "
        # Define minimum acceptable metrics
        MIN_F1 = 0.4
        MIN_PR_AUC = 0.4
        MIN_ROC_AUC = 0.5
        MAX_BRIER = 0.5
        
        print(f'Minimum thresholds: F1>{MIN_F1}, PR-AUC>{MIN_PR_AUC}, ROC-AUC>{MIN_ROC_AUC}, Brier<{MAX_BRIER}')
        print('✅ Thresholds defined for model validation')
        "
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          .coverage
          htmlcov/