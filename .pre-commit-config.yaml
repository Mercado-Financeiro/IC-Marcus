# Pre-commit hooks configuration
# Install: pre-commit install
# Run manually: pre-commit run --all-files
# Update hooks: pre-commit autoupdate

default_language_version:
  python: python3.11

repos:
  # General file fixes
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(data/|artifacts/|mlruns/)
      - id: end-of-file-fixer
        exclude: ^(data/|artifacts/|mlruns/)
      - id: check-yaml
        args: [--unsafe]
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=1000']
        exclude: ^(data/|artifacts/|models/|.*\.(pkl|pth|h5|joblib))
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: name-tests-test
        args: ['--pytest-test-first']
      - id: requirements-txt-fixer

  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=100, --target-version=py311]
        exclude: ^(notebooks/.*\.py|venv/|venv_windows/)

  # Python linting with Ruff
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.4
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        exclude: ^(notebooks/.*\.py|venv/|venv_windows/)
      - id: ruff-format
        exclude: ^(notebooks/.*\.py|venv/|venv_windows/)

  # Type checking with MyPy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --no-strict-optional]
        exclude: ^(tests/|notebooks/|venv/|venv_windows/)
        additional_dependencies:
          - types-PyYAML
          - types-requests
          - types-setuptools
          - pandas-stubs
          - numpy

  # Security checks with Bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
      - id: bandit
        args: ['-ll', '--skip', 'B101,B601,B602,B607']
        exclude: ^(tests/|notebooks/|venv/|venv_windows/)

  # Jupyter notebook cleanup
  - repo: https://github.com/kynan/nbstripout
    rev: 0.7.1
    hooks:
      - id: nbstripout
        args: [--keep-output, --keep-count]

  # Markdown formatting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: ['--fix']
        exclude: ^(venv/|venv_windows/)

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types_or: [yaml, json]
        exclude: ^(data/|artifacts/|mlruns/|venv/|venv_windows/)

  # Secrets detection with detect-secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: ^(.*\.lock|package-lock\.json|venv/|venv_windows/)

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # Python docstring coverage
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        exclude: ^(tests/|notebooks/|setup\.py|venv/|venv_windows/)
        additional_dependencies: [tomli]

  # Import sorting with isort
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=100]
        exclude: ^(notebooks/|venv/|venv_windows/)

  # Check for Python vulnerabilities
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.3
    hooks:
      - id: python-safety-dependencies-check
        files: requirements.*\.txt$

  # Validate Python AST
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-blanket-type-ignore
      - id: python-no-eval
      - id: python-no-log-warn
      - id: python-use-type-annotations
      - id: text-unicode-replacement-char

  # Git commit message linting
  - repo: https://github.com/jorisroovers/gitlint
    rev: v0.19.1
    hooks:
      - id: gitlint
        args: [--ignore=body-is-missing, --msg-filename]

  # License header check (optional - uncomment if needed)
  # - repo: https://github.com/Lucas-C/pre-commit-hooks
  #   rev: v1.5.4
  #   hooks:
  #     - id: insert-license
  #       files: \.py$
  #       args:
  #         - --license-filepath
  #         - LICENSE.txt
  #         - --comment-style
  #         - "#"

# Configuration for specific tools
ci:
  autofix_prs: true
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autoupdate_schedule: weekly
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  skip: [mypy, hadolint-docker]  # These might fail in CI environment